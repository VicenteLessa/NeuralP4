{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1fXFf839YNOpQgENlnu7JtKjxxFOnZdAG","timestamp":1681859023822},{"file_id":"1mLCRTikxh9tyI-F7NTmat_8ifc6gpFE2","timestamp":1681735696378},{"file_id":"13VBzwSbKgEQJjG3nrdu9WzYQatfmabFf","timestamp":1681602237614},{"file_id":"10U1kB83SIZYSqsKqdlJwPXnF0a587TYS","timestamp":1660767035622}],"toc_visible":true,"authorship_tag":"ABX9TyNR8pcZiX/hpc+Vq6Jkusjr"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["###Imports and Read CSV"],"metadata":{"id":"yojLIrVPoVI1"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":37458,"status":"ok","timestamp":1681882710749,"user":{"displayName":"Vicente Lessa","userId":"14551761473643883791"},"user_tz":180},"id":"93XXr2GHiBqA","outputId":"2e5428ee-2a6a-4676-880b-ec8518f0327a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5685,"status":"ok","timestamp":1681882770165,"user":{"displayName":"Vicente Lessa","userId":"14551761473643883791"},"user_tz":180},"id":"CT-15-PmiHZn","outputId":"7899955a-7317-44d7-b7f6-24fa70c3757c"},"outputs":[{"output_type":"stream","name":"stdout","text":["2.12.0\n"]}],"source":["import datetime\n","import json\n","import numpy as np\n","import os\n","import pandas as pd\n","import sys \n","import tensorflow as tf\n","import time\n","import matplotlib.pyplot as plt\n","import math\n","import random\n","\n","from sklearn.model_selection import KFold\n","from keras.callbacks import History \n","history = History()\n","\n","\n","number_of_NN_repetitions = 1\n","BATCH_SIZE = 10\n","samples_per_class = 2000\n","\n","\n","print(tf.__version__)"]},{"cell_type":"markdown","source":["###Exploring the complete Dataframe"],"metadata":{"id":"O4LimCUdn5ys"}},{"cell_type":"code","source":["df_train = pd.read_csv('/content/drive/MyDrive/NN-P4/csv-files/df_6_train_990000_samples.csv')\n","df_test = pd.read_csv('/content/drive/MyDrive/NN-P4/csv-files/df_6_test_10000_samples.csv')\n","display(df_train)"],"metadata":{"id":"kGl8itfojl79","executionInfo":{"status":"ok","timestamp":1681882785794,"user_tz":180,"elapsed":13679,"user":{"displayName":"Vicente Lessa","userId":"14551761473643883791"}},"colab":{"base_uri":"https://localhost:8080/","height":487},"outputId":"bb6258e1-ae76-4ab6-8741-e69ac418a8d4"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["                                flow_key  src_ip_numeric          src_ip  \\\n","0       3acee4f4ea001cd5e6d9584d4036b53d      3232266497   192.168.121.1   \n","1       974ec5991b439c9a7176b88be0c90df0      3232266497   192.168.121.1   \n","2       3acee4f4ea001cd5e6d9584d4036b53d      3232266497   192.168.121.1   \n","3       974ec5991b439c9a7176b88be0c90df0      3232266497   192.168.121.1   \n","4       cfa7c2740072befaa89c202499729e08      3232266497   192.168.121.1   \n","...                                  ...             ...             ...   \n","989995  220a1da5f66bcf8172585bc3ec3c903a      3232268049  192.168.127.17   \n","989996  442d09853ee64989960fc88e3a339fc7      3232268049  192.168.127.17   \n","989997  d42766647e7f521eb3d095d13c371d76      3232268049  192.168.127.17   \n","989998  3c87d3d9d308d2c2f74ac22b47cc9614      3232268049  192.168.127.17   \n","989999  705929f3fe999747998180091b9a5bc8      3232268049  192.168.127.17   \n","\n","        src_port          dst_ip  dst_port  proto  pktTotalCount  \\\n","0             67  172.16.255.185        67     17             22   \n","1             67  172.16.255.186        67     17             17   \n","2             67  172.16.255.185        67     17             43   \n","3             67  172.16.255.186        67     17             30   \n","4              0    10.130.1.166         0      1              1   \n","...          ...             ...       ...    ...            ...   \n","989995     60567  172.16.255.200        53     17              2   \n","989996     60567  172.16.255.183        53     17              2   \n","989997     63224  172.16.255.200        53     17              2   \n","989998     63228  172.217.15.195       443     17              5   \n","989999     50221    72.21.81.200       443      6             37   \n","\n","        octetTotalCount  min_ps  ...     b_flowEnd  b_flowDuration  \\\n","0                  7620     328  ...  1.555955e+09    1.554399e+12   \n","1                  5670     328  ...  0.000000e+00    0.000000e+00   \n","2                 15124     328  ...  1.555965e+09    1.554409e+12   \n","3                 10086     328  ...  0.000000e+00    0.000000e+00   \n","4                    56      56  ...  0.000000e+00    0.000000e+00   \n","...                 ...     ...  ...           ...             ...   \n","989995              237      73  ...  1.556136e+09    0.000000e+00   \n","989996              237      73  ...  1.556136e+09    0.000000e+00   \n","989997              225      61  ...  1.556136e+09    0.000000e+00   \n","989998             5600      88  ...  0.000000e+00    0.000000e+00   \n","989999            23010      40  ...  1.556137e+09    1.554580e+12   \n","\n","        b_min_piat  b_max_piat  b_avg_piat  b_std_dev_piat  flowEndReason  \\\n","0         0.010354  198.657965   51.689181       84.916348              2   \n","1         0.000000    0.000000    0.000000        0.000000              2   \n","2         0.022332  340.268454   89.927588      124.270745              2   \n","3         0.000000    0.000000    0.000000        0.000000              2   \n","4         0.000000    0.000000    0.000000        0.000000              2   \n","...            ...         ...         ...             ...            ...   \n","989995    0.000000    0.000000    0.000000        0.000000              2   \n","989996    0.000000    0.000000    0.000000        0.000000              2   \n","989997    0.000000    0.000000    0.000000        0.000000              2   \n","989998    0.000000    0.000000    0.000000        0.000000              2   \n","989999    0.000003  109.342612    6.104962       25.038889              2   \n","\n","             category  application_protocol     web_service  \n","0             Network               Unknown            DHCP  \n","1             Network               Unknown            DHCP  \n","2             Network               Unknown            DHCP  \n","3             Network               Unknown            DHCP  \n","4             Network               Unknown            ICMP  \n","...               ...                   ...             ...  \n","989995            Web                   DNS       Microsoft  \n","989996            Web                   DNS       Microsoft  \n","989997  Collaborative                   DNS       Office365  \n","989998            Web                  QUIC  GoogleServices  \n","989999            Web                   TLS       Microsoft  \n","\n","[990000 rows x 50 columns]"],"text/html":["\n","  <div id=\"df-032eb7b8-2ec9-4dc8-875b-d1bd965dca3d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flow_key</th>\n","      <th>src_ip_numeric</th>\n","      <th>src_ip</th>\n","      <th>src_port</th>\n","      <th>dst_ip</th>\n","      <th>dst_port</th>\n","      <th>proto</th>\n","      <th>pktTotalCount</th>\n","      <th>octetTotalCount</th>\n","      <th>min_ps</th>\n","      <th>...</th>\n","      <th>b_flowEnd</th>\n","      <th>b_flowDuration</th>\n","      <th>b_min_piat</th>\n","      <th>b_max_piat</th>\n","      <th>b_avg_piat</th>\n","      <th>b_std_dev_piat</th>\n","      <th>flowEndReason</th>\n","      <th>category</th>\n","      <th>application_protocol</th>\n","      <th>web_service</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3acee4f4ea001cd5e6d9584d4036b53d</td>\n","      <td>3232266497</td>\n","      <td>192.168.121.1</td>\n","      <td>67</td>\n","      <td>172.16.255.185</td>\n","      <td>67</td>\n","      <td>17</td>\n","      <td>22</td>\n","      <td>7620</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>1.555955e+09</td>\n","      <td>1.554399e+12</td>\n","      <td>0.010354</td>\n","      <td>198.657965</td>\n","      <td>51.689181</td>\n","      <td>84.916348</td>\n","      <td>2</td>\n","      <td>Network</td>\n","      <td>Unknown</td>\n","      <td>DHCP</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>974ec5991b439c9a7176b88be0c90df0</td>\n","      <td>3232266497</td>\n","      <td>192.168.121.1</td>\n","      <td>67</td>\n","      <td>172.16.255.186</td>\n","      <td>67</td>\n","      <td>17</td>\n","      <td>17</td>\n","      <td>5670</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","      <td>Network</td>\n","      <td>Unknown</td>\n","      <td>DHCP</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3acee4f4ea001cd5e6d9584d4036b53d</td>\n","      <td>3232266497</td>\n","      <td>192.168.121.1</td>\n","      <td>67</td>\n","      <td>172.16.255.185</td>\n","      <td>67</td>\n","      <td>17</td>\n","      <td>43</td>\n","      <td>15124</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>1.555965e+09</td>\n","      <td>1.554409e+12</td>\n","      <td>0.022332</td>\n","      <td>340.268454</td>\n","      <td>89.927588</td>\n","      <td>124.270745</td>\n","      <td>2</td>\n","      <td>Network</td>\n","      <td>Unknown</td>\n","      <td>DHCP</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>974ec5991b439c9a7176b88be0c90df0</td>\n","      <td>3232266497</td>\n","      <td>192.168.121.1</td>\n","      <td>67</td>\n","      <td>172.16.255.186</td>\n","      <td>67</td>\n","      <td>17</td>\n","      <td>30</td>\n","      <td>10086</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","      <td>Network</td>\n","      <td>Unknown</td>\n","      <td>DHCP</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>cfa7c2740072befaa89c202499729e08</td>\n","      <td>3232266497</td>\n","      <td>192.168.121.1</td>\n","      <td>0</td>\n","      <td>10.130.1.166</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>56</td>\n","      <td>56</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","      <td>Network</td>\n","      <td>Unknown</td>\n","      <td>ICMP</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>989995</th>\n","      <td>220a1da5f66bcf8172585bc3ec3c903a</td>\n","      <td>3232268049</td>\n","      <td>192.168.127.17</td>\n","      <td>60567</td>\n","      <td>172.16.255.200</td>\n","      <td>53</td>\n","      <td>17</td>\n","      <td>2</td>\n","      <td>237</td>\n","      <td>73</td>\n","      <td>...</td>\n","      <td>1.556136e+09</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","      <td>Web</td>\n","      <td>DNS</td>\n","      <td>Microsoft</td>\n","    </tr>\n","    <tr>\n","      <th>989996</th>\n","      <td>442d09853ee64989960fc88e3a339fc7</td>\n","      <td>3232268049</td>\n","      <td>192.168.127.17</td>\n","      <td>60567</td>\n","      <td>172.16.255.183</td>\n","      <td>53</td>\n","      <td>17</td>\n","      <td>2</td>\n","      <td>237</td>\n","      <td>73</td>\n","      <td>...</td>\n","      <td>1.556136e+09</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","      <td>Web</td>\n","      <td>DNS</td>\n","      <td>Microsoft</td>\n","    </tr>\n","    <tr>\n","      <th>989997</th>\n","      <td>d42766647e7f521eb3d095d13c371d76</td>\n","      <td>3232268049</td>\n","      <td>192.168.127.17</td>\n","      <td>63224</td>\n","      <td>172.16.255.200</td>\n","      <td>53</td>\n","      <td>17</td>\n","      <td>2</td>\n","      <td>225</td>\n","      <td>61</td>\n","      <td>...</td>\n","      <td>1.556136e+09</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","      <td>Collaborative</td>\n","      <td>DNS</td>\n","      <td>Office365</td>\n","    </tr>\n","    <tr>\n","      <th>989998</th>\n","      <td>3c87d3d9d308d2c2f74ac22b47cc9614</td>\n","      <td>3232268049</td>\n","      <td>192.168.127.17</td>\n","      <td>63228</td>\n","      <td>172.217.15.195</td>\n","      <td>443</td>\n","      <td>17</td>\n","      <td>5</td>\n","      <td>5600</td>\n","      <td>88</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","      <td>Web</td>\n","      <td>QUIC</td>\n","      <td>GoogleServices</td>\n","    </tr>\n","    <tr>\n","      <th>989999</th>\n","      <td>705929f3fe999747998180091b9a5bc8</td>\n","      <td>3232268049</td>\n","      <td>192.168.127.17</td>\n","      <td>50221</td>\n","      <td>72.21.81.200</td>\n","      <td>443</td>\n","      <td>6</td>\n","      <td>37</td>\n","      <td>23010</td>\n","      <td>40</td>\n","      <td>...</td>\n","      <td>1.556137e+09</td>\n","      <td>1.554580e+12</td>\n","      <td>0.000003</td>\n","      <td>109.342612</td>\n","      <td>6.104962</td>\n","      <td>25.038889</td>\n","      <td>2</td>\n","      <td>Web</td>\n","      <td>TLS</td>\n","      <td>Microsoft</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>990000 rows × 50 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-032eb7b8-2ec9-4dc8-875b-d1bd965dca3d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-032eb7b8-2ec9-4dc8-875b-d1bd965dca3d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-032eb7b8-2ec9-4dc8-875b-d1bd965dca3d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"code","source":["df_train = df_train.drop(axis=1,columns=['flow_key', 'src_ip_numeric', 'src_ip', 'src_port', 'dst_ip', 'dst_port', 'pktTotalCount', 'octetTotalCount', 'min_ps', 'max_ps', 'avg_ps', 'std_dev_ps', 'flowStart', 'flowEnd', 'flowDuration', 'min_piat', 'max_piat', 'avg_piat', 'std_dev_piat', 'f_std_dev_ps', 'f_std_dev_piat', 'b_std_dev_ps', 'b_std_dev_piat'])\n","df_test = df_test.drop(axis=1,columns=['flow_key', 'src_ip_numeric', 'src_ip', 'src_port', 'dst_ip', 'dst_port', 'pktTotalCount', 'octetTotalCount', 'min_ps', 'max_ps', 'avg_ps', 'std_dev_ps', 'flowStart', 'flowEnd', 'flowDuration', 'min_piat', 'max_piat', 'avg_piat', 'std_dev_piat', 'f_std_dev_ps', 'f_std_dev_piat', 'b_std_dev_ps', 'b_std_dev_piat'])\n","category_train = df_train.pop('category')\n","category_test = df_test.pop('category')\n","app_proto_train = df_train.pop('application_protocol')\n","app_proto_test = df_test.pop('application_protocol')\n","web_service_train = df_train.pop('web_service')\n","web_service_test = df_test.pop('web_service')\n","display(df_train)\n","display(df_test)"],"metadata":{"id":"4khj93Re06KC","executionInfo":{"status":"ok","timestamp":1681882822326,"user_tz":180,"elapsed":791,"user":{"displayName":"Vicente Lessa","userId":"14551761473643883791"}},"colab":{"base_uri":"https://localhost:8080/","height":894},"outputId":"27b42b7b-2277-4547-ebe1-015d251a9b74"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["        proto  f_pktTotalCount  f_octetTotalCount  f_min_ps  f_max_ps  \\\n","0          17               17               5670       328       354   \n","1          17               17               5670       328       354   \n","2          17               30              10062       328       352   \n","3          17               30              10086       328       352   \n","4           1                1                 56        56        56   \n","...       ...              ...                ...       ...       ...   \n","989995     17                1                 73        73        73   \n","989996     17                1                 73        73        73   \n","989997     17                1                 61        61        61   \n","989998     17                5               5600        88      1378   \n","989999      6               18               1399        40       255   \n","\n","           f_avg_ps   f_flowStart     f_flowEnd  f_flowDuration  f_min_piat  \\\n","0        333.529412  1.555954e+09  1.555955e+12     1701.385427    0.010463   \n","1        333.529412  1.555954e+09  1.555955e+12     1701.385515    0.010356   \n","2        335.400000  1.555964e+09  1.555965e+12     1450.967340    0.015413   \n","3        336.200000  1.555964e+09  1.555965e+12     1450.967130    0.015330   \n","4         56.000000  1.555966e+09  1.555966e+09        0.000000    0.000000   \n","...             ...           ...           ...             ...         ...   \n","989995    73.000000  1.556136e+09  1.556136e+09        0.000000    0.000000   \n","989996    73.000000  1.556136e+09  1.556136e+09        0.000000    0.000000   \n","989997    61.000000  1.556136e+09  1.556136e+09        0.000000    0.000000   \n","989998  1120.000000  1.556137e+09  1.556137e+12        4.002380    0.475230   \n","989999    77.722222  1.556136e+09  1.556137e+12      109.889580    0.000138   \n","\n","        ...  b_min_ps  b_max_ps     b_avg_ps   b_flowStart     b_flowEnd  \\\n","0       ...       389       394   390.000000  1.555955e+09  1.555955e+09   \n","1       ...         0         0     0.000000  0.000000e+00  0.000000e+00   \n","2       ...       389       394   389.384615  1.555964e+09  1.555965e+09   \n","3       ...         0         0     0.000000  0.000000e+00  0.000000e+00   \n","4       ...         0         0     0.000000  0.000000e+00  0.000000e+00   \n","...     ...       ...       ...          ...           ...           ...   \n","989995  ...       164       164   164.000000  1.556136e+09  1.556136e+09   \n","989996  ...       164       164   164.000000  1.556136e+09  1.556136e+09   \n","989997  ...       164       164   164.000000  1.556136e+09  1.556136e+09   \n","989998  ...         0         0     0.000000  0.000000e+00  0.000000e+00   \n","989999  ...        40      5336  1137.421053  1.556136e+09  1.556137e+09   \n","\n","        b_flowDuration  b_min_piat  b_max_piat  b_avg_piat  flowEndReason  \n","0         1.554399e+12    0.010354  198.657965   51.689181              2  \n","1         0.000000e+00    0.000000    0.000000    0.000000              2  \n","2         1.554409e+12    0.022332  340.268454   89.927588              2  \n","3         0.000000e+00    0.000000    0.000000    0.000000              2  \n","4         0.000000e+00    0.000000    0.000000    0.000000              2  \n","...                ...         ...         ...         ...            ...  \n","989995    0.000000e+00    0.000000    0.000000    0.000000              2  \n","989996    0.000000e+00    0.000000    0.000000    0.000000              2  \n","989997    0.000000e+00    0.000000    0.000000    0.000000              2  \n","989998    0.000000e+00    0.000000    0.000000    0.000000              2  \n","989999    1.554580e+12    0.000003  109.342612    6.104962              2  \n","\n","[990000 rows x 24 columns]"],"text/html":["\n","  <div id=\"df-edab4cdf-825c-46db-bb4e-5dcf8d079746\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>proto</th>\n","      <th>f_pktTotalCount</th>\n","      <th>f_octetTotalCount</th>\n","      <th>f_min_ps</th>\n","      <th>f_max_ps</th>\n","      <th>f_avg_ps</th>\n","      <th>f_flowStart</th>\n","      <th>f_flowEnd</th>\n","      <th>f_flowDuration</th>\n","      <th>f_min_piat</th>\n","      <th>...</th>\n","      <th>b_min_ps</th>\n","      <th>b_max_ps</th>\n","      <th>b_avg_ps</th>\n","      <th>b_flowStart</th>\n","      <th>b_flowEnd</th>\n","      <th>b_flowDuration</th>\n","      <th>b_min_piat</th>\n","      <th>b_max_piat</th>\n","      <th>b_avg_piat</th>\n","      <th>flowEndReason</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17</td>\n","      <td>17</td>\n","      <td>5670</td>\n","      <td>328</td>\n","      <td>354</td>\n","      <td>333.529412</td>\n","      <td>1.555954e+09</td>\n","      <td>1.555955e+12</td>\n","      <td>1701.385427</td>\n","      <td>0.010463</td>\n","      <td>...</td>\n","      <td>389</td>\n","      <td>394</td>\n","      <td>390.000000</td>\n","      <td>1.555955e+09</td>\n","      <td>1.555955e+09</td>\n","      <td>1.554399e+12</td>\n","      <td>0.010354</td>\n","      <td>198.657965</td>\n","      <td>51.689181</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>17</td>\n","      <td>17</td>\n","      <td>5670</td>\n","      <td>328</td>\n","      <td>354</td>\n","      <td>333.529412</td>\n","      <td>1.555954e+09</td>\n","      <td>1.555955e+12</td>\n","      <td>1701.385515</td>\n","      <td>0.010356</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>17</td>\n","      <td>30</td>\n","      <td>10062</td>\n","      <td>328</td>\n","      <td>352</td>\n","      <td>335.400000</td>\n","      <td>1.555964e+09</td>\n","      <td>1.555965e+12</td>\n","      <td>1450.967340</td>\n","      <td>0.015413</td>\n","      <td>...</td>\n","      <td>389</td>\n","      <td>394</td>\n","      <td>389.384615</td>\n","      <td>1.555964e+09</td>\n","      <td>1.555965e+09</td>\n","      <td>1.554409e+12</td>\n","      <td>0.022332</td>\n","      <td>340.268454</td>\n","      <td>89.927588</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>17</td>\n","      <td>30</td>\n","      <td>10086</td>\n","      <td>328</td>\n","      <td>352</td>\n","      <td>336.200000</td>\n","      <td>1.555964e+09</td>\n","      <td>1.555965e+12</td>\n","      <td>1450.967130</td>\n","      <td>0.015330</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>56</td>\n","      <td>56</td>\n","      <td>56</td>\n","      <td>56.000000</td>\n","      <td>1.555966e+09</td>\n","      <td>1.555966e+09</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>989995</th>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>73</td>\n","      <td>73</td>\n","      <td>73</td>\n","      <td>73.000000</td>\n","      <td>1.556136e+09</td>\n","      <td>1.556136e+09</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>164</td>\n","      <td>164</td>\n","      <td>164.000000</td>\n","      <td>1.556136e+09</td>\n","      <td>1.556136e+09</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>989996</th>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>73</td>\n","      <td>73</td>\n","      <td>73</td>\n","      <td>73.000000</td>\n","      <td>1.556136e+09</td>\n","      <td>1.556136e+09</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>164</td>\n","      <td>164</td>\n","      <td>164.000000</td>\n","      <td>1.556136e+09</td>\n","      <td>1.556136e+09</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>989997</th>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>61</td>\n","      <td>61</td>\n","      <td>61</td>\n","      <td>61.000000</td>\n","      <td>1.556136e+09</td>\n","      <td>1.556136e+09</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>164</td>\n","      <td>164</td>\n","      <td>164.000000</td>\n","      <td>1.556136e+09</td>\n","      <td>1.556136e+09</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>989998</th>\n","      <td>17</td>\n","      <td>5</td>\n","      <td>5600</td>\n","      <td>88</td>\n","      <td>1378</td>\n","      <td>1120.000000</td>\n","      <td>1.556137e+09</td>\n","      <td>1.556137e+12</td>\n","      <td>4.002380</td>\n","      <td>0.475230</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>989999</th>\n","      <td>6</td>\n","      <td>18</td>\n","      <td>1399</td>\n","      <td>40</td>\n","      <td>255</td>\n","      <td>77.722222</td>\n","      <td>1.556136e+09</td>\n","      <td>1.556137e+12</td>\n","      <td>109.889580</td>\n","      <td>0.000138</td>\n","      <td>...</td>\n","      <td>40</td>\n","      <td>5336</td>\n","      <td>1137.421053</td>\n","      <td>1.556136e+09</td>\n","      <td>1.556137e+09</td>\n","      <td>1.554580e+12</td>\n","      <td>0.000003</td>\n","      <td>109.342612</td>\n","      <td>6.104962</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>990000 rows × 24 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-edab4cdf-825c-46db-bb4e-5dcf8d079746')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-edab4cdf-825c-46db-bb4e-5dcf8d079746 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-edab4cdf-825c-46db-bb4e-5dcf8d079746');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["      proto  f_pktTotalCount  f_octetTotalCount  f_min_ps  f_max_ps  \\\n","0        17               10                563        48       131   \n","1         6               10               6167        40      2960   \n","2         6                4                367        40       235   \n","3         6               14               2935        40       824   \n","4         6               16               3417        40       906   \n","...     ...              ...                ...       ...       ...   \n","9995      6                1                 40        40        40   \n","9996      6                7               1014        40       557   \n","9997      6               70              13992        40      1570   \n","9998      6               31               2674        52       588   \n","9999     17                1                 62        62        62   \n","\n","        f_avg_ps   f_flowStart     f_flowEnd  f_flowDuration  f_min_piat  ...  \\\n","0      56.300000  1.555964e+09  1.555965e+12      563.330191    3.037031  ...   \n","1     616.700000  1.556054e+09  1.556054e+12       61.735800    0.000010  ...   \n","2      91.750000  1.555955e+09  1.555955e+12        0.125307    0.000119  ...   \n","3     209.642857  1.556048e+09  1.556048e+12        1.001948    0.000002  ...   \n","4     213.562500  1.556029e+09  1.556030e+12      240.201862    0.000002  ...   \n","...          ...           ...           ...             ...         ...  ...   \n","9995   40.000000  1.556125e+09  1.556125e+09        0.000000    0.000000  ...   \n","9996  144.857143  1.556054e+09  1.556054e+12        0.726497    0.000027  ...   \n","9997  199.885714  1.555969e+09  1.555969e+12      256.978603    0.000002  ...   \n","9998   86.258065  1.555967e+09  1.555968e+12      285.083246    0.000314  ...   \n","9999   62.000000  1.556125e+09  1.556125e+09        0.000000    0.000000  ...   \n","\n","      b_min_ps  b_max_ps     b_avg_ps   b_flowStart     b_flowEnd  \\\n","0            0         0     0.000000  0.000000e+00  0.000000e+00   \n","1           40      4348  1056.187500  1.556054e+09  1.556054e+09   \n","2           40      1616   569.333333  1.555955e+09  1.555955e+09   \n","3           40      2285   280.500000  1.556048e+09  1.556048e+09   \n","4           40       464   106.947368  1.556029e+09  1.556030e+09   \n","...        ...       ...          ...           ...           ...   \n","9995         0         0     0.000000  0.000000e+00  0.000000e+00   \n","9996        40      2876   714.500000  1.556054e+09  1.556054e+09   \n","9997        40      1509   387.768519  1.555969e+09  1.555969e+09   \n","9998        52      2888  1267.000000  1.555967e+09  1.555968e+09   \n","9999        94        94    94.000000  1.556125e+09  1.556125e+09   \n","\n","      b_flowDuration    b_min_piat  b_max_piat  b_avg_piat  flowEndReason  \n","0       0.000000e+00  0.000000e+00    0.000000    0.000000              2  \n","1       1.554498e+12  9.536743e-07   60.868149    4.115687              3  \n","2       1.554399e+12  5.009174e-04    0.123748    0.062124              2  \n","3       1.554492e+12  9.536743e-07    0.283144    0.058923              3  \n","4       1.554474e+12  1.907349e-06  239.957614   13.344544              3  \n","...              ...           ...         ...         ...            ...  \n","9995    0.000000e+00  0.000000e+00    0.000000    0.000000              2  \n","9996    1.554498e+12  9.529591e-04    0.101316    0.042570              4  \n","9997    1.554413e+12  3.099442e-06   45.268614    2.401670              3  \n","9998    1.554412e+12  2.145767e-06  239.919065   10.558632              3  \n","9999    0.000000e+00  0.000000e+00    0.000000    0.000000              2  \n","\n","[10000 rows x 24 columns]"],"text/html":["\n","  <div id=\"df-b1b9afd3-f080-412e-872e-04b2955645af\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>proto</th>\n","      <th>f_pktTotalCount</th>\n","      <th>f_octetTotalCount</th>\n","      <th>f_min_ps</th>\n","      <th>f_max_ps</th>\n","      <th>f_avg_ps</th>\n","      <th>f_flowStart</th>\n","      <th>f_flowEnd</th>\n","      <th>f_flowDuration</th>\n","      <th>f_min_piat</th>\n","      <th>...</th>\n","      <th>b_min_ps</th>\n","      <th>b_max_ps</th>\n","      <th>b_avg_ps</th>\n","      <th>b_flowStart</th>\n","      <th>b_flowEnd</th>\n","      <th>b_flowDuration</th>\n","      <th>b_min_piat</th>\n","      <th>b_max_piat</th>\n","      <th>b_avg_piat</th>\n","      <th>flowEndReason</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17</td>\n","      <td>10</td>\n","      <td>563</td>\n","      <td>48</td>\n","      <td>131</td>\n","      <td>56.300000</td>\n","      <td>1.555964e+09</td>\n","      <td>1.555965e+12</td>\n","      <td>563.330191</td>\n","      <td>3.037031</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>6167</td>\n","      <td>40</td>\n","      <td>2960</td>\n","      <td>616.700000</td>\n","      <td>1.556054e+09</td>\n","      <td>1.556054e+12</td>\n","      <td>61.735800</td>\n","      <td>0.000010</td>\n","      <td>...</td>\n","      <td>40</td>\n","      <td>4348</td>\n","      <td>1056.187500</td>\n","      <td>1.556054e+09</td>\n","      <td>1.556054e+09</td>\n","      <td>1.554498e+12</td>\n","      <td>9.536743e-07</td>\n","      <td>60.868149</td>\n","      <td>4.115687</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>367</td>\n","      <td>40</td>\n","      <td>235</td>\n","      <td>91.750000</td>\n","      <td>1.555955e+09</td>\n","      <td>1.555955e+12</td>\n","      <td>0.125307</td>\n","      <td>0.000119</td>\n","      <td>...</td>\n","      <td>40</td>\n","      <td>1616</td>\n","      <td>569.333333</td>\n","      <td>1.555955e+09</td>\n","      <td>1.555955e+09</td>\n","      <td>1.554399e+12</td>\n","      <td>5.009174e-04</td>\n","      <td>0.123748</td>\n","      <td>0.062124</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>2935</td>\n","      <td>40</td>\n","      <td>824</td>\n","      <td>209.642857</td>\n","      <td>1.556048e+09</td>\n","      <td>1.556048e+12</td>\n","      <td>1.001948</td>\n","      <td>0.000002</td>\n","      <td>...</td>\n","      <td>40</td>\n","      <td>2285</td>\n","      <td>280.500000</td>\n","      <td>1.556048e+09</td>\n","      <td>1.556048e+09</td>\n","      <td>1.554492e+12</td>\n","      <td>9.536743e-07</td>\n","      <td>0.283144</td>\n","      <td>0.058923</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6</td>\n","      <td>16</td>\n","      <td>3417</td>\n","      <td>40</td>\n","      <td>906</td>\n","      <td>213.562500</td>\n","      <td>1.556029e+09</td>\n","      <td>1.556030e+12</td>\n","      <td>240.201862</td>\n","      <td>0.000002</td>\n","      <td>...</td>\n","      <td>40</td>\n","      <td>464</td>\n","      <td>106.947368</td>\n","      <td>1.556029e+09</td>\n","      <td>1.556030e+09</td>\n","      <td>1.554474e+12</td>\n","      <td>1.907349e-06</td>\n","      <td>239.957614</td>\n","      <td>13.344544</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9995</th>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>40</td>\n","      <td>40</td>\n","      <td>40</td>\n","      <td>40.000000</td>\n","      <td>1.556125e+09</td>\n","      <td>1.556125e+09</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>9996</th>\n","      <td>6</td>\n","      <td>7</td>\n","      <td>1014</td>\n","      <td>40</td>\n","      <td>557</td>\n","      <td>144.857143</td>\n","      <td>1.556054e+09</td>\n","      <td>1.556054e+12</td>\n","      <td>0.726497</td>\n","      <td>0.000027</td>\n","      <td>...</td>\n","      <td>40</td>\n","      <td>2876</td>\n","      <td>714.500000</td>\n","      <td>1.556054e+09</td>\n","      <td>1.556054e+09</td>\n","      <td>1.554498e+12</td>\n","      <td>9.529591e-04</td>\n","      <td>0.101316</td>\n","      <td>0.042570</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>9997</th>\n","      <td>6</td>\n","      <td>70</td>\n","      <td>13992</td>\n","      <td>40</td>\n","      <td>1570</td>\n","      <td>199.885714</td>\n","      <td>1.555969e+09</td>\n","      <td>1.555969e+12</td>\n","      <td>256.978603</td>\n","      <td>0.000002</td>\n","      <td>...</td>\n","      <td>40</td>\n","      <td>1509</td>\n","      <td>387.768519</td>\n","      <td>1.555969e+09</td>\n","      <td>1.555969e+09</td>\n","      <td>1.554413e+12</td>\n","      <td>3.099442e-06</td>\n","      <td>45.268614</td>\n","      <td>2.401670</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>9998</th>\n","      <td>6</td>\n","      <td>31</td>\n","      <td>2674</td>\n","      <td>52</td>\n","      <td>588</td>\n","      <td>86.258065</td>\n","      <td>1.555967e+09</td>\n","      <td>1.555968e+12</td>\n","      <td>285.083246</td>\n","      <td>0.000314</td>\n","      <td>...</td>\n","      <td>52</td>\n","      <td>2888</td>\n","      <td>1267.000000</td>\n","      <td>1.555967e+09</td>\n","      <td>1.555968e+09</td>\n","      <td>1.554412e+12</td>\n","      <td>2.145767e-06</td>\n","      <td>239.919065</td>\n","      <td>10.558632</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>9999</th>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>62</td>\n","      <td>62</td>\n","      <td>62</td>\n","      <td>62.000000</td>\n","      <td>1.556125e+09</td>\n","      <td>1.556125e+09</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>94</td>\n","      <td>94</td>\n","      <td>94.000000</td>\n","      <td>1.556125e+09</td>\n","      <td>1.556125e+09</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 24 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1b9afd3-f080-412e-872e-04b2955645af')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b1b9afd3-f080-412e-872e-04b2955645af button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b1b9afd3-f080-412e-872e-04b2955645af');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"code","source":["# print(category_test.unique(),len(category_test.unique()))\n","# print(category_train.unique(),len(category_train.unique()))\n","\n","# categories = ['Web','Network','Unspecified','SocialNetwork','Media','Chat','Cloud','VoIP','System','Collaborative','Email','Download-FileTransfer-FileSharing','SoftwareUpdate','Video','RemoteAccess','Music','Game','RPC','Streaming','VPN','Database','Shopping','Mining','DataTransfer']\n","# print(len(categories))\n","# print(category_train.head(10))\n","# print(category_test.head(10))\n","\n","# for i,x in enumerate(category_test):\n","#   for index,name in enumerate(categories):\n","#     if x == name:\n","#       category_test[i] = index\n","\n","# for i,x in enumerate(category_train):\n","#   for index,name in enumerate(categories):\n","#     if x == name:\n","#       category_train[i] = index\n","\n","# print(category_train.head(10))\n","# print(category_test.head(10))\n","\n","\n","# title = f\"/content/drive/MyDrive/NN-P4/csv-files/df_6_train_24_attr_990000_samples.csv\"\n","# df_train.to_csv(title, index=False)\n","title = f\"/content/drive/MyDrive/NN-P4/csv-files/df_6_test_24_attr_10000_samples.csv\"\n","df_test.to_csv(title, index=False)"],"metadata":{"id":"3j5suMwVsco9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# display(df_test)\n","# df_test = df_test.applymap(np.int64)\n","# display(df_test)\n","display(df_test.keys())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":145},"id":"4VQGNEUCUNyR","executionInfo":{"status":"ok","timestamp":1681883229890,"user_tz":180,"elapsed":460,"user":{"displayName":"Vicente Lessa","userId":"14551761473643883791"}},"outputId":"b468deaf-01e0-4a16-dff9-9fd6177939d3"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["Index(['proto', 'f_pktTotalCount', 'f_octetTotalCount', 'f_min_ps', 'f_max_ps',\n","       'f_avg_ps', 'f_flowStart', 'f_flowEnd', 'f_flowDuration', 'f_min_piat',\n","       'f_max_piat', 'f_avg_piat', 'b_pktTotalCount', 'b_octetTotalCount',\n","       'b_min_ps', 'b_max_ps', 'b_avg_ps', 'b_flowStart', 'b_flowEnd',\n","       'b_flowDuration', 'b_min_piat', 'b_max_piat', 'b_avg_piat',\n","       'flowEndReason'],\n","      dtype='object')"]},"metadata":{}}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tj2cFHLXkoXh"},"outputs":[],"source":["def get_basic_model():\n","  model = tf.keras.Sequential([\n","    normalizer,\n","    tf.keras.layers.Dense(24, activation='relu'),\n","    tf.keras.layers.Dense(24)\n","  ])\n","\n","  model.compile(optimizer='adam',\n","                loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n","                metrics=['accuracy'])\n","  return model"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":579},"id":"7dGpBjoEjAgX","executionInfo":{"status":"error","timestamp":1681870811948,"user_tz":180,"elapsed":1128695,"user":{"displayName":"Vicente Lessa","userId":"14551761473643883791"}},"outputId":"e38ec1bd-e4f8-4458-9706-9607d7ab9789"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","99000/99000 [==============================] - 220s 2ms/step - loss: 0.9368 - accuracy: 0.7132\n","Epoch 2/10\n","99000/99000 [==============================] - 225s 2ms/step - loss: 0.8581 - accuracy: 0.7400\n","Epoch 3/10\n","99000/99000 [==============================] - 224s 2ms/step - loss: 0.8400 - accuracy: 0.7466\n","Epoch 4/10\n","99000/99000 [==============================] - 218s 2ms/step - loss: 0.8321 - accuracy: 0.7504\n","Epoch 5/10\n","92341/99000 [==========================>...] - ETA: 14s - loss: 0.8273 - accuracy: 0.7523"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-42-ce7223d5049a>\u001b[0m in \u001b[0;36m<cell line: 22>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnumber_of_NN_repetitions\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m   \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_basic_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 24\u001b[0;31m   \u001b[0mhistory\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtarget_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mBATCH_SIZE\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mBATCH_SIZE\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcallbacks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     25\u001b[0m   \u001b[0mone_train_accuracy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhistory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'accuracy'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     63\u001b[0m         \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     64\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 65\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     66\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     67\u001b[0m             \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1683\u001b[0m                         ):\n\u001b[1;32m   1684\u001b[0m                             \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1685\u001b[0;31m                             \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1686\u001b[0m                             \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1687\u001b[0m                                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    892\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    893\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 894\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    895\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    896\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    924\u001b[0m       \u001b[0;31m# In this case we have created variables on the first call, so we run the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    925\u001b[0m       \u001b[0;31m# defunned version which is guaranteed to never create variables.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 926\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_no_variable_creation_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=not-callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    927\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_variable_creation_fn\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    928\u001b[0m       \u001b[0;31m# Release the lock early so that multiple threads can perform the call\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/tensorflow/python/eager/polymorphic_function/tracing_compiler.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    141\u001b[0m       (concrete_function,\n\u001b[1;32m    142\u001b[0m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[0;32m--> 143\u001b[0;31m     return concrete_function._call_flat(\n\u001b[0m\u001b[1;32m    144\u001b[0m         filtered_flat_args, captured_inputs=concrete_function.captured_inputs)  # pylint: disable=protected-access\n\u001b[1;32m    145\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/tensorflow/python/eager/polymorphic_function/monomorphic_function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1755\u001b[0m         and executing_eagerly):\n\u001b[1;32m   1756\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1757\u001b[0;31m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0m\u001b[1;32m   1758\u001b[0m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[1;32m   1759\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/tensorflow/python/eager/polymorphic_function/monomorphic_function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    379\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0m_InterpolateFunctionError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    380\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcancellation_manager\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 381\u001b[0;31m           outputs = execute.execute(\n\u001b[0m\u001b[1;32m    382\u001b[0m               \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msignature\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    383\u001b[0m               \u001b[0mnum_outputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_num_outputs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     50\u001b[0m   \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     51\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 52\u001b[0;31m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0m\u001b[1;32m     53\u001b[0m                                         inputs, attrs, num_outputs)\n\u001b[1;32m     54\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["#escolhe os labels\n","target_train = pd.read_csv('/content/drive/MyDrive/NN-P4/csv-files/df_6_train_target_990000_samples.csv')\n","target_test = pd.read_csv('/content/drive/MyDrive/NN-P4/csv-files/df_6_test_target_10000_samples.csv')\n","#converte valores int não suportados para o tipo esperado\n","target_train = np.asarray(target_train).astype(np.float32)\n","target_test = np.asarray(target_test).astype(np.float32)\n","df_train = np.asarray(df_train).astype(np.float32)\n","df_test = np.asarray(df_test).astype(np.float32)\n","# Converts pandas dataframe to tensorflow object\n","df_train = tf.convert_to_tensor(df_train)\n","# Normalize the data\n","normalizer = tf.keras.layers.Normalization(axis=-1)\n","normalizer.adapt(df_train)\n","#normalizer.adapt(numeric_features_test)\n","\n","# Execute Trainning and Testing\n","#model = get_basic_model()\n","train_accuracy = []\n","test_acc = []\n","for i in range(number_of_NN_repetitions):\n","  model = get_basic_model()\n","  history = model.fit(df_train, target_train, epochs=BATCH_SIZE, verbose=1, batch_size=BATCH_SIZE, callbacks=[history])\n","  one_train_accuracy = history.history['accuracy']\n","\n","  test_loss, one_test_acc =  model.evaluate(df_test,  target_test, verbose=2, batch_size=BATCH_SIZE)\n","  train_accuracy.append(one_train_accuracy[-1])\n","  test_acc.append(one_test_acc)\n","  print(f\"{i+1}: train_accuracy:{train_accuracy} test_acc:{test_acc}\")\n","  tf_predictions_probabilities = model.predict(df_test)\n","  #tf_loss, tf_acc =  model.evaluate(numeric_features_test,  target_test, verbose=2, batch_size=BATCH_SIZE)\n","\n","  tf_predictions = []\n","\n","  for i,x in enumerate(tf_predictions_probabilities):\n","    #print(\"i:\",i,\"x_max:\",x.max(),\"x:\",x)  \n","    j_max = x.argmax()\n","    tf_predictions.append(j_max)  \n","\n","  conf_m = tf.math.confusion_matrix(target_test,tf_predictions)\n","  print(conf_m)\n","\n","\n","train_accuracy_mean = sum(train_accuracy) / len(train_accuracy)\n","test_acc_mean = sum(test_acc) / len(test_acc)\n","print(f'train_accuracy_mean:{train_accuracy_mean} test_acc_mean: {test_acc_mean}')\n","# Date for report file\n","current_date_and_time = datetime.date.today()\n","current_date_and_time_string = str(current_date_and_time)\n","# Report file content\n","report = {\n","    \"datetime\": current_date_and_time_string,\n","    \"training_dataset_shape\":  str(df_train.shape),\n","    \"test_dataset_shape\": str(df_test.shape),\n","    \"accuracy_train\": train_accuracy_mean,\n","    \"accuracy_test\": test_acc_mean\n","}\n","# Writes into the file\n","title = \"/content/drive/MyDrive/network-traffic-classification-main/nn-reports/%s\"%current_date_and_time_string + \" With %d samples_per_class.json\"%samples_per_class\n","with open(title, \"w\") as f:\n","  json.dump(report, f)\n","title_without_date = \"/content/drive/MyDrive/network-traffic-classification-main/nn-reports/last run with %d samples_per_class.json\"%samples_per_class\n","with open(title_without_date, \"w\") as f:\n","  json.dump(report, f)\n","with open(title, \"r\") as f:\n","  rep = json.load(f)\n","#display(rep)\n","\n","#print(rep[\"datetime\"])\n","\n"]},{"cell_type":"code","source":["print(df_test)\n","\n","print(df_test_int)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9K63BRbqEbUl","executionInfo":{"status":"ok","timestamp":1681867026397,"user_tz":180,"elapsed":2463,"user":{"displayName":"Vicente Lessa","userId":"14551761473643883791"}},"outputId":"3c501d88-4702-4146-e1de-40902c97fde8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["      proto  pktTotalCount  octetTotalCount  min_ps  max_ps      avg_ps  \\\n","0        17             10              563      48     131   56.300000   \n","1         6             26            23066      40    4348  887.153846   \n","2         6              7             2075      40    1616  296.428571   \n","3         6             32             7984      40    2285  249.500000   \n","4         6             35             5449      40     906  155.685714   \n","...     ...            ...              ...     ...     ...         ...   \n","9995      6              1               40      40      40   40.000000   \n","9996      6             13             5301      40    2876  407.769231   \n","9997      6            178            55871      40    1570  313.882022   \n","9998      6             59            38150      52    2888  646.610169   \n","9999     17              2              156      62      94   78.000000   \n","\n","       std_dev_ps     flowStart       flowEnd  flowDuration  ...     b_avg_ps  \\\n","0       24.900000  1.555964e+09  1.555965e+09    563.330191  ...     0.000000   \n","1     1198.866987  1.556054e+09  1.556054e+09     61.735800  ...  1056.187500   \n","2      542.717990  1.555955e+09  1.555955e+09      0.125307  ...   569.333333   \n","3      469.638957  1.556048e+09  1.556048e+09      1.001948  ...   280.500000   \n","4      213.508885  1.556029e+09  1.556030e+09    240.201966  ...   106.947368   \n","...           ...           ...           ...           ...  ...          ...   \n","9995     0.000000  1.556125e+09  1.556125e+09      0.000000  ...     0.000000   \n","9996   752.261631  1.556054e+09  1.556054e+09      0.726497  ...   714.500000   \n","9997   440.917408  1.555969e+09  1.555969e+09    256.978760  ...   387.768519   \n","9998   814.372567  1.555967e+09  1.555968e+09    285.083283  ...  1267.000000   \n","9999    16.000000  1.556125e+09  1.556125e+09      0.000755  ...    94.000000   \n","\n","      b_std_dev_ps   b_flowStart     b_flowEnd  b_flowDuration    b_min_piat  \\\n","0         0.000000  0.000000e+00  0.000000e+00    0.000000e+00  0.000000e+00   \n","1      1296.913462  1.556054e+09  1.556054e+09    1.554498e+12  9.536743e-07   \n","2       740.121311  1.555955e+09  1.555955e+09    1.554399e+12  5.009174e-04   \n","3       585.931286  1.556048e+09  1.556048e+09    1.554492e+12  9.536743e-07   \n","4       115.654419  1.556029e+09  1.556030e+09    1.554474e+12  1.907349e-06   \n","...            ...           ...           ...             ...           ...   \n","9995      0.000000  0.000000e+00  0.000000e+00    0.000000e+00  0.000000e+00   \n","9996   1005.890443  1.556054e+09  1.556054e+09    1.554498e+12  9.529591e-04   \n","9997    500.128976  1.555969e+09  1.555969e+09    1.554413e+12  3.099442e-06   \n","9998    806.916574  1.555967e+09  1.555968e+09    1.554412e+12  2.145767e-06   \n","9999      0.000000  1.556125e+09  1.556125e+09    0.000000e+00  0.000000e+00   \n","\n","      b_max_piat  b_avg_piat  b_std_dev_piat  flowEndReason  \n","0       0.000000    0.000000        0.000000              2  \n","1      60.868149    4.115687       15.168052              3  \n","2       0.123748    0.062124        0.061624              2  \n","3       0.283144    0.058923        0.086256              3  \n","4     239.957614   13.344544       54.961750              3  \n","...          ...         ...             ...            ...  \n","9995    0.000000    0.000000        0.000000              2  \n","9996    0.101316    0.042570        0.038110              4  \n","9997   45.268614    2.401670        9.619717              3  \n","9998  239.919065   10.558632       45.764240              3  \n","9999    0.000000    0.000000        0.000000              2  \n","\n","[10000 rows x 41 columns]\n","      proto  pktTotalCount  octetTotalCount  min_ps  max_ps  avg_ps  \\\n","0        17             10              563      48     131      56   \n","1         6             26            23066      40    4348     887   \n","2         6              7             2075      40    1616     296   \n","3         6             32             7984      40    2285     249   \n","4         6             35             5449      40     906     155   \n","...     ...            ...              ...     ...     ...     ...   \n","9995      6              1               40      40      40      40   \n","9996      6             13             5301      40    2876     407   \n","9997      6            178            55871      40    1570     313   \n","9998      6             59            38150      52    2888     646   \n","9999     17              2              156      62      94      78   \n","\n","      std_dev_ps   flowStart     flowEnd  flowDuration  ...  b_avg_ps  \\\n","0             24  1555964273  1555964836           563  ...         0   \n","1           1198  1556053574  1556053636            61  ...      1056   \n","2            542  1555955309  1555955309             0  ...       569   \n","3            469  1556047747  1556047748             1  ...       280   \n","4            213  1556029424  1556029664           240  ...       106   \n","...          ...         ...         ...           ...  ...       ...   \n","9995           0  1556124962  1556124962             0  ...         0   \n","9996         752  1556054273  1556054274             0  ...       714   \n","9997         440  1555969058  1555969315           256  ...       387   \n","9998         814  1555967356  1555967641           285  ...      1267   \n","9999          16  1556124604  1556124604             0  ...        94   \n","\n","      b_std_dev_ps  b_flowStart   b_flowEnd  b_flowDuration  b_min_piat  \\\n","0                0            0           0               0           0   \n","1             1296   1556053574  1556053636   1554497582902           0   \n","2              740   1555955309  1555955309   1554399353845           0   \n","3              585   1556047747  1556047748   1554491700967           0   \n","4              115   1556029424  1556029664   1554473634906           0   \n","...            ...          ...         ...             ...         ...   \n","9995             0            0           0               0           0   \n","9996          1005   1556054273  1556054273   1554498219247           0   \n","9997           500   1555969058  1555969315   1554413346394           0   \n","9998           806   1555967356  1555967641   1554411673807           0   \n","9999             0   1556124604  1556124604               0           0   \n","\n","      b_max_piat  b_avg_piat  b_std_dev_piat  flowEndReason  \n","0              0           0               0              2  \n","1             60           4              15              3  \n","2              0           0               0              2  \n","3              0           0               0              3  \n","4            239          13              54              3  \n","...          ...         ...             ...            ...  \n","9995           0           0               0              2  \n","9996           0           0               0              4  \n","9997          45           2               9              3  \n","9998         239          10              45              3  \n","9999           0           0               0              2  \n","\n","[10000 rows x 41 columns]\n"]}]},{"cell_type":"code","source":["test_loss, one_test_acc =  model.evaluate(df_test_int,  target_test, verbose=2, batch_size=BATCH_SIZE)\n","print(one_test_acc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2LN-10rCD_mr","executionInfo":{"status":"ok","timestamp":1681867067189,"user_tz":180,"elapsed":3206,"user":{"displayName":"Vicente Lessa","userId":"14551761473643883791"}},"outputId":"66c43f11-7be7-4315-8cfd-ece66b4330d4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1000/1000 - 2s - loss: 0.7781 - accuracy: 0.7628 - 2s/epoch - 2ms/step\n","0.7627999782562256\n"]}]},{"cell_type":"code","source":["# display((df_test[\"min_piat\"].head(10)))\n","# cols = df_test.keys()\n","# df_test[cols] = df_test[cols].applymap(np.int64)\n","# display((df_test[\"min_piat\"].head(10)))\n","\n","\n","# df_train = np.asarray(df_train).astype(np.float32)\n","# df_test = np.asarray(df_test).astype(np.float32)\n","# print((df_train.columns))\n","\n","# #target_train = [int(i) for i in target_train]\n","\n","# for i,label in enumerate(target_train.head(10)):\n","#   print(i,label)\n","#   #target_train[i] = top10.index(label)\n","# #print(target_train.head(10))\n","\n","#targets = numpy.concatenate([([i]*1000) for i in [0,1,2,3,4,5,6,7,8,9]], axis=0)"],"metadata":{"id":"QJsn0yOookbB"},"execution_count":null,"outputs":[]}]}